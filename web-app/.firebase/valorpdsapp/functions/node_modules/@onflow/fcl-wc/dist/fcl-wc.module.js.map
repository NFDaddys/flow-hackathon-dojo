{"version":3,"file":"fcl-wc.module.js","sources":["../src/utils.js","../src/constants.js","../src/service.js","../src/fcl-wc.js"],"sourcesContent":["import {log, LEVELS} from \"@onflow/util-logger\"\nimport {config} from \"@onflow/config\"\nimport {invariant} from \"@onflow/util-invariant\"\n\nexport let CONFIGURED_NETWORK = null\n\nexport const setConfiguredNetwork = async () => {\n  CONFIGURED_NETWORK = await config.get(\"flow.network\")\n  invariant(\n    CONFIGURED_NETWORK === \"mainnet\" || CONFIGURED_NETWORK === \"testnet\",\n    \"FCL Configuration value for 'flow.network' is required (testnet || mainnet)\"\n  )\n}\n\nconst makeFlowServicesFromWallets = wallets => {\n  return Object.values(wallets)\n    .filter(w => w.app_type === \"wallet\")\n    .map(wallet => {\n      return {\n        f_type: \"Service\",\n        f_vsn: \"1.0.0\",\n        type: \"authn\",\n        method: \"WC/RPC\",\n        uid: wallet.mobile?.universal,\n        endpoint: \"flow_authn\",\n        optIn: true,\n        provider: {\n          address: null,\n          name: wallet.name,\n          icon: wallet.image_url?.sm,\n          description: wallet.description,\n          website: wallet.homepage,\n          color: wallet.metadata?.colors?.primary,\n          supportEmail: null,\n        },\n      }\n    })\n}\n\nexport const fetchFlowWallets = async projectId => {\n  try {\n    const wcApiWallets = await fetch(\n      `https://explorer-api.walletconnect.com/v3/wallets?projectId=${projectId}&chains=flow:${CONFIGURED_NETWORK}&entries=5&page=1`\n    ).then(res => res.json())\n\n    if (wcApiWallets?.count > 0) {\n      return makeFlowServicesFromWallets(wcApiWallets.listings)\n    }\n\n    return []\n  } catch (error) {\n    log({\n      title: `${error.name} Error fetching wallets from WalletConnect API`,\n      message: error.message,\n      level: LEVELS.error,\n    })\n  }\n}\n\nexport function isAndroid() {\n  return (\n    typeof navigator !== \"undefined\" && /android/i.test(navigator.userAgent)\n  )\n}\n\nexport function isSmallIOS() {\n  return (\n    typeof navigator !== \"undefined\" && /iPhone|iPod/.test(navigator.userAgent)\n  )\n}\n\nexport function isLargeIOS() {\n  return typeof navigator !== \"undefined\" && /iPad/.test(navigator.userAgent)\n}\n\nexport function isIOS() {\n  return isSmallIOS() || isLargeIOS()\n}\n\nexport function isMobile() {\n  return isAndroid() || isIOS()\n}\n","export const FLOW_METHODS = {\n  FLOW_AUTHN: \"flow_authn\",\n  FLOW_AUTHZ: \"flow_authz\",\n  FLOW_USER_SIGN: \"flow_user_sign\",\n}\n\nexport const REQUEST_TYPES = {\n  SESSION_REQUEST: \"session_proposal\",\n  SIGNING_REQUEST: \"signing_request\",\n}\n","import QRCodeModal from \"@walletconnect/qrcode-modal\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {log, LEVELS} from \"@onflow/util-logger\"\nimport {fetchFlowWallets, isMobile, CONFIGURED_NETWORK, isIOS} from \"./utils\"\nimport {FLOW_METHODS, REQUEST_TYPES} from \"./constants\"\n\nexport const makeServicePlugin = async (client, opts = {}) => ({\n  name: \"fcl-plugin-service-walletconnect\",\n  f_type: \"ServicePlugin\",\n  type: \"discovery-service\",\n  services: await makeWcServices(opts),\n  serviceStrategy: {method: \"WC/RPC\", exec: makeExec(client, opts)},\n})\n\nconst makeExec = (client, {wcRequestHook, pairingModalOverride}) => {\n  return ({service, body, opts}) => {\n    return new Promise(async (resolve, reject) => {\n      invariant(client, \"WalletConnect is not initialized\")\n      let session, pairing, windowRef\n      const method = service.endpoint\n      const appLink = validateAppLink(service)\n      const pairings = client.pairing.getAll({active: true})\n\n      if (pairings.length > 0) {\n        pairing = pairings?.find(p => p.peerMetadata?.url === service.uid)\n      }\n\n      if (client.session.length > 0) {\n        const lastKeyIndex = client.session.keys.length - 1\n        session = client.session.get(client.session.keys.at(lastKeyIndex))\n      }\n\n      if (isMobile()) {\n        if (opts.windowRef) {\n          windowRef = opts.windowRef\n        } else {\n          windowRef = window.open(\"\", \"_blank\")\n        }\n      }\n\n      if (session == null) {\n        session = await connectWc({\n          service,\n          onClose,\n          appLink,\n          windowRef,\n          client,\n          method,\n          pairing,\n          wcRequestHook,\n          pairingModalOverride,\n        })\n      }\n\n      if (wcRequestHook && wcRequestHook instanceof Function) {\n        wcRequestHook({\n          type: REQUEST_TYPES.SIGNING_REQUEST,\n          method,\n          service,\n          session: session ?? null,\n          pairing: pairing ?? null,\n          uri: null,\n        })\n      }\n\n      if (isMobile() && method !== FLOW_METHODS.FLOW_AUTHN) {\n        openDeepLink()\n      }\n\n      const [chainId, addr, address] = makeSessionData(session)\n      const data = JSON.stringify({...body, addr, address})\n\n      try {\n        const result = await client.request({\n          topic: session.topic,\n          chainId,\n          request: {\n            method,\n            params: [data],\n          },\n        })\n        onResponse(result)\n      } catch (error) {\n        log({\n          title: `${error.name} Error on WalletConnect client ${method} request`,\n          message: error.message,\n          level: LEVELS.error,\n        })\n        reject(`Declined: Externally Halted`)\n      } finally {\n        if (windowRef && !windowRef.closed) {\n          windowRef.close()\n        }\n      }\n\n      function validateAppLink({uid}) {\n        if (!(uid && /^(ftp|http|https):\\/\\/[^ \"]+$/.test(uid))) {\n          log({\n            title: \"WalletConnect Service Warning\",\n            message: `service.uid should be a valid universal link url. Found: ${uid}`,\n            level: LEVELS.warn,\n          })\n        }\n        return uid\n      }\n\n      function openDeepLink() {\n        if (windowRef) {\n          if (appLink.startsWith(\"http\") && !isIOS()) {\n            // Workaround for https://github.com/rainbow-me/rainbowkit/issues/524.\n            // Using 'window.open' causes issues on iOS in non-Safari browsers and\n            // WebViews where a blank tab is left behind after connecting.\n            // This is especially bad in some WebView scenarios (e.g. following a\n            // link from Twitter) where the user doesn't have any mechanism for\n            // closing the blank tab.\n            // For whatever reason, links with a target of \"_blank\" don't suffer\n            // from this problem, and programmatically clicking a detached link\n            // element with the same attributes also avoids the issue.\n            const link = document.createElement(\"a\")\n            link.href = appLink\n            link.target = \"_blank\"\n            link.rel = \"noreferrer noopener\"\n            link.click()\n          } else {\n            windowRef.location.href = appLink\n          }\n        } else {\n          log({\n            title: \"Problem opening deep link in new window\",\n            message: `Window failed to open (was it blocked by the browser?)`,\n            level: LEVELS.warn,\n          })\n        }\n      }\n\n      function makeSessionData(session) {\n        const [namespace, reference, address] = Object.values(\n          session.namespaces\n        )\n          .map(namespace => namespace.accounts)\n          .flat()\n          .filter(account => account.startsWith(\"flow:\"))[0]\n          .split(\":\")\n\n        const chainId = `${namespace}:${reference}`\n        const addr = address\n        return [chainId, addr, address]\n      }\n\n      function onResponse(resp) {\n        try {\n          if (typeof resp !== \"object\") return\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              break\n          }\n        } catch (error) {\n          log({\n            title: `${error.name} \"WC/RPC onResponse error\"`,\n            message: error.message,\n            level: LEVELS.error,\n          })\n          throw error\n        }\n      }\n\n      function onClose() {\n        reject(`Declined: Externally Halted`)\n      }\n    })\n  }\n}\n\nasync function connectWc({\n  service,\n  onClose,\n  appLink,\n  windowRef,\n  client,\n  method,\n  pairing,\n  wcRequestHook,\n  pairingModalOverride,\n}) {\n  const requiredNamespaces = {\n    flow: {\n      methods: [\n        FLOW_METHODS.FLOW_AUTHN,\n        FLOW_METHODS.FLOW_AUTHZ,\n        FLOW_METHODS.FLOW_USER_SIGN,\n      ],\n      chains: [`flow:${CONFIGURED_NETWORK}`],\n      events: [\"chainChanged\", \"accountsChanged\"],\n    },\n  }\n\n  try {\n    const {uri, approval} = await client.connect({\n      pairingTopic: pairing?.topic,\n      requiredNamespaces,\n    })\n    var _uri = uri\n\n    if (wcRequestHook && wcRequestHook instanceof Function) {\n      wcRequestHook({\n        type: REQUEST_TYPES.SESSION_REQUEST,\n        method,\n        service,\n        session: session ?? null,\n        pairing: pairing ?? null,\n        uri: uri ?? null,\n      })\n    }\n\n    if (!pairing) {\n      invariant(\n        uri,\n        \"Cannot establish connection, WalletConnect URI is undefined\"\n      )\n    }\n\n    if (isMobile()) {\n      const queryString = new URLSearchParams({uri: uri}).toString()\n      let url = pairing == null ? appLink + \"?\" + queryString : appLink\n      windowRef.location.href = url\n    } else if (!pairing) {\n      if (!pairingModalOverride) {\n        QRCodeModal.open(uri, () => {\n          onClose()\n        })\n      } else {\n        pairingModalOverride(uri, onClose)\n      }\n    }\n\n    const session = await approval()\n    return session\n  } catch (error) {\n    log({\n      title: `${error.name} Error establishing WalletConnect session`,\n      message: `\n        ${error.message}\n        uri: ${_uri}\n      `,\n      level: LEVELS.error,\n    })\n    onClose()\n    throw error\n  } finally {\n    if (windowRef && !windowRef.closed) {\n      windowRef.close()\n    }\n    QRCodeModal.close()\n  }\n}\n\nconst makeBaseWalletConnectService = includeBaseWC => {\n  return {\n    f_type: \"Service\",\n    f_vsn: \"1.0.0\",\n    type: \"authn\",\n    method: \"WC/RPC\",\n    uid: \"https://walletconnect.com\",\n    endpoint: \"flow_authn\",\n    optIn: !includeBaseWC,\n    provider: {\n      address: null,\n      name: \"WalletConnect\",\n      icon: \"https://avatars.githubusercontent.com/u/37784886\",\n      description: \"WalletConnect Base Service\",\n      website: \"https://walletconnect.com\",\n      color: null,\n      supportEmail: null,\n    },\n  }\n}\n\nasync function makeWcServices({projectId, includeBaseWC, wallets}) {\n  const wcBaseService = makeBaseWalletConnectService(includeBaseWC)\n  const flowWcWalletServices = (await fetchFlowWallets(projectId)) ?? []\n  const injectedWalletServices = CONFIGURED_NETWORK === \"testnet\" ? wallets : []\n  return [wcBaseService, ...flowWcWalletServices, ...injectedWalletServices]\n}\n","import * as fcl from \"@onflow/fcl\"\nimport SignClient from \"@walletconnect/sign-client\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {LEVELS, log} from \"@onflow/util-logger\"\nexport {getSdkError} from \"@walletconnect/utils\"\nimport {makeServicePlugin} from \"./service\"\nimport {setConfiguredNetwork} from \"./utils\"\n\nconst DEFAULT_RELAY_URL = \"wss://relay.walletconnect.com\"\nconst DEFAULT_LOGGER = \"debug\"\nlet client = null\n\nconst initClient = async ({projectId, metadata}) => {\n  invariant(\n    projectId != null,\n    \"FCL Wallet Connect Error: WalletConnect projectId is required\"\n  )\n  try {\n    client = await SignClient.init({\n      logger: DEFAULT_LOGGER,\n      relayUrl: DEFAULT_RELAY_URL,\n      projectId: projectId,\n      metadata: metadata,\n    })\n    return client\n  } catch (error) {\n    log({\n      title: `${error.name} fcl-wc Init Client`,\n      message: error.message,\n      level: LEVELS.error,\n    })\n    throw error\n  }\n}\n\nexport const init = async ({\n  projectId,\n  metadata,\n  includeBaseWC = false,\n  wcRequestHook = null,\n  pairingModalOverride = null,\n  wallets = [],\n} = {}) => {\n  await setConfiguredNetwork()\n  const _client = client ?? (await initClient({projectId, metadata}))\n  const FclWcServicePlugin = await makeServicePlugin(_client, {\n    projectId,\n    includeBaseWC,\n    wcRequestHook,\n    pairingModalOverride,\n    wallets,\n  })\n  fcl.discovery.authn.update()\n\n  return {\n    FclWcServicePlugin,\n    client,\n  }\n}\n"],"names":["CONFIGURED_NETWORK","setConfiguredNetwork","config","get","invariant","makeFlowServicesFromWallets","wallets","Object","values","filter","w","app_type","map","wallet","f_type","f_vsn","type","method","uid","mobile","universal","endpoint","optIn","provider","address","name","icon","image_url","sm","description","website","homepage","color","metadata","colors","primary","supportEmail","fetchFlowWallets","projectId","fetch","then","res","json","wcApiWallets","count","listings","log","title","message","level","LEVELS","error","isAndroid","navigator","test","userAgent","isSmallIOS","isLargeIOS","isIOS","isMobile","FLOW_METHODS","FLOW_AUTHN","FLOW_AUTHZ","FLOW_USER_SIGN","REQUEST_TYPES","SESSION_REQUEST","SIGNING_REQUEST","makeServicePlugin","client","opts","makeWcServices","exec","makeExec","services","serviceStrategy","wcRequestHook","pairingModalOverride","service","body","Promise","resolve","reject","validateAppLink","openDeepLink","makeSessionData","onResponse","onClose","resp","status","data","reason","session","namespaces","namespace","accounts","flat","account","startsWith","split","reference","chainId","addr","windowRef","appLink","link","document","createElement","href","target","rel","click","location","warn","pairings","pairing","getAll","active","length","find","p","peerMetadata","url","lastKeyIndex","keys","at","window","open","connectWc","Function","uri","JSON","stringify","request","topic","params","result","closed","close","requiredNamespaces","flow","methods","chains","events","connect","pairingTopic","approval","_uri","queryString","URLSearchParams","toString","QRCodeModal","makeBaseWalletConnectService","includeBaseWC","wcBaseService","flowWcWalletServices","injectedWalletServices","DEFAULT_RELAY_URL","DEFAULT_LOGGER","initClient","SignClient","init","logger","relayUrl","_client","FclWcServicePlugin","fcl","discovery","authn","update"],"mappings":"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"}